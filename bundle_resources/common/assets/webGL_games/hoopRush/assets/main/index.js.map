{"version":3,"sources":["../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/BackgroundController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/BotController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/CameraController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/ComplimentPopup.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/Constants.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/CustomRandom.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/GameController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/PoolManager.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/RotateComponent.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/ScoreController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/Startup.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/Target.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/TargetController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/Torus.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/TorusSpawner.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/TouchController.ts","../../file:/C:/Sources/Arenum/HoopRush/assets/scripts/file:/C:/Sources/Arenum/HoopRush/assets/scripts/TrainingController.ts"],"names":["ccclass","_decorator","property","BackgroundController","type","Texture2D","Material","Color","_inheritsLoose","args","_this","_initializerDefineProperty","_mesh","_proto","onLoad","node","getComponentInChildren","MeshRenderer","getComponent","enabled","SpawnBG","index","Constants","RandomFixedSeed","Rand","bgTextures","length","setTexture","setMainColorMaterial","floorMaterial","floorColors","setPosition","mesh","texture","getMaterial","setProperty","material","color","Component","configurable","enumerable","writable","initializer","BotController","_canStep","_botSkill","botStart","gameController","BotSkill","scheduleOnce","_this2","botStep","IsTraining","BOT_TRAINING_START_DELAY","BOT_START_DELAY","dir","target","getWorldPosition","subtract","opponentTorus","position","nextBotStepDelay","RandomNotFixedSeed","range","y","x","Launch","MOVE_DIR","Right","Left","BOT_STEP_DELAY_MIN_1","BOT_STEP_DELAY_MIN_2","BOT_STEP_DELAY_MAX_1","BOT_STEP_DELAY_MAX_2","_this3","botStop","onDestroy","onDisable","CameraController","Animation","_prevMainTorusPos","update","deltaTime","setCameraPosition_Y","PlayShakeAnimation","play","currentMainTorusPos","mainTorus","getPosition","deltaMainTorusPos_Y","newCameraPos","Vec3","CAMERA_MOVE_COEFF","z","ComplimentPopup","Sprite","SpriteFrame","_countShow","start","Disable","Show","active","setPositionAndRotation","frameIndex","mainSpriteFrames","mainSprite","spriteFrame","animation","COMPLIMENT_ENABLE_ANIMATION","angl","Quat","fromEuler","setRotation","GAME_MODE","TORUS_TYPE","HAPTIC_TYPE","GAME_EVENT","cameraController","fakeTorus","MainCanvas","MainCamera","CustomRandom","LEFT_BOARDER_NAME","RIGHT_BOARDER_NAME","UX_TORUS_HIT","UX_TORUS_LAUNCH","ADD_SCORE","TOUCH_DELAY","MAIN_TORUS_SPAWN_POS","OPPONENT_TORUS_SPAWN_POS","TORUS_SPAWN_CENTER_POS","TORUS_FORCE","TORUS_PHYSICS_GROUP_MAIN","TORUS_PHYSICS_GROUP_OPPONENT","TORUS_LAUNCH_FORCE_COEFF_ON_BOARDER","LEADER_POS_Y","PHYSICS_FIXED_TIME_STEP","PHYSICS_MAX_SUB_STEPS","MAX_ACCUMULATOR","SPHERE_SPAWN_POS_X","SPHERE_SPAWN_POS_Y","SPHERE_ENABLE_ANIMATION","SPHERE_TRIGGER_DELAY","COMPLIMENT_POPUP_DURATION","seed","Date","getTime","min","max","rnd","Math","floor","RandInArray","array","exclud1","exclud2","filter","obj","GameController","TouchController","TrainingController","TorusSpawner","Camera","Canvas","Prefab","GameMode","WITH_BOT","MainScore","BotScore","IsMaster","__preload","touchController","PhysicsSystem","instance","fixedTimeStep","maxSubSteps","window","blitzOnSceneLoaded","undefined","startGame","math","randomRange","gameMode","isMaster","isFirstLaunch","botSkill","setGameMode","trainingController","destroy","torusSpawner","Spawn","backgroundController","botController","stopTraining","gameStop","botGameOver","blitzOnBotGameOverOneWorld","gameOver","blitzOnGameOver","PVP","SOLO","console","log","PlayUX","name","blitzOnUX","addScore","score","checkLeader","blitzOnScore","addBotScore","blitzOnNewBotScoreOneWorld","isBotLeader","SetLeader","launchOpponentTorus","PoolManager","dictPool","dictPrefab","getNode","prefab","parent","data","hasOwnProperty","pool","size","get","instantiate","NodePool","putNode","put","clearPool","clear","_createClass","key","_instance","RotateComponent","Number","addSpeed","Speed","eulerAngles","Direction","ScoreController","ShowScore","worldPos","ScoreAnimPrefab","pos","cameraComp","convertToUINode","animationComponent","once","EventType","FINISHED","Startup","director","preloadScene","Target","_currentColorIndex","setColor","mainColors","setColorMaterial","SetActive","GetMainColor","GetAdditionalColor","additionalColors","PlayParticles","rot_z","particleNode","ParticlePrefab","setWorldPosition","particleSystemComp","getComponentsInChildren","ParticleSystem","mainColor","additionalColor","forEach","element","startColor","colorMax","colorMin","leftRotation","rightRotation","fromAngleZ","setWorldRotation","TargetController","Collider","_scoreController","_currentTargetIndex","targets","enableRandomTarget","TriggerCollider","on","onTriggerEnter","off","event","torus","otherCollider","Torus","onTrigger","test","torus_rot_z","Type","MAIN","worldPosition","OPPONENT","setNextPos","callback","newPos_x","newPos_y","newPos","Node","AnimationComponent","_rigidBody","_collider","_isFirstLaunch","_leaderNode","_isLeader","RigidBody","getComponents","useGravity","setPhysicsGroup","initLeaderNode","startArrow","SetMeshEnabled","i","onCollisionEnter","START_TOUCH","onStartTouch","dt","setLeaderNodePosition","direction","forceCoeff","torusLaunchEffect","launchParticle","blitzOnLaunchOpponentTorus","setLinearVelocity","dirVec","force","multiplyScalar","applyForce","leader","leaderMesh","leaderPrefab","setGroup","mainPos","oppPos","createMainTorus","createOpponentTorus","createFakeTorus","torusPref","setMaterial","mainMaterial","setRandomTexture","torusTextures","opponentMaterial","textures","_screenWidth","_canTouch","_touchTimer","view","getVisibleSizeInPixel","width","onEnable","TOUCH_START","onTouchStart","touch","emit","touchPos","getLocation","currentActiveAnimDir","targetArrow","arrowPref","scale","swapAnim","leftButtonAnim","rightButtonAnim","updateButtonsState","setTargetArrowAlpha","alpha","Vec4","updateTargetArrow","tempQuat","lookAt","toEuler","rotation","setRotationFromEuler","distance"],"mappings":"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","file":"all.js","sourcesContent":["\r\nimport { _decorator, Component, Texture2D, MeshRenderer, Color, Material } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BackgroundController')\r\nexport class BackgroundController extends Component {\r\n\r\n    @property({ type: Texture2D })\r\n    bgTextures: (Texture2D | null)[] = [];\r\n\r\n    @property(Material)\r\n    floorMaterial: Material = null!;\r\n\r\n    @property({ type: Color })\r\n    floorColors: (Color | null)[] = [];\r\n\r\n    private _mesh : MeshRenderer\r\n\r\n    public onLoad() {\r\n        this._mesh = this.node.getComponentInChildren(MeshRenderer) ?? this.node.getComponent(MeshRenderer);\r\n        this._mesh.enabled = false\r\n    }\r\n\r\n    public SpawnBG () {\r\n        let index = Constants.RandomFixedSeed.Rand(this.bgTextures.length);\r\n        this.setTexture(this._mesh,  this.bgTextures[index]);\r\n        this._mesh.enabled = true\r\n        this.setMainColorMaterial(this.floorMaterial, this.floorColors[index])\r\n        if(index == 2){\r\n            this.node.setPosition(0, -60, -410);\r\n        }\r\n    }\r\n\r\n    private setTexture(mesh: MeshRenderer, texture: Texture2D) {\r\n        mesh?.getMaterial(0)?.setProperty(\"mainTexture\", texture);\r\n    }\r\n\r\n    private setMainColorMaterial(material: Material, color: Color){\r\n        material.setProperty(\"mainColor\", color);\r\n    }\r\n}","\r\nimport { _decorator, Component } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('BotController')\r\nexport class BotController extends Component{\r\n    private _canStep = true;\r\n    private _botSkill = 0;\r\n\r\n    public botStart() {\r\n        this._canStep = true;\r\n        this._botSkill = Constants.gameController.BotSkill\r\n        this.scheduleOnce(() => {\r\n            this.botStep();\r\n        }, Constants.gameController.IsTraining ?\r\n        Constants.BOT_TRAINING_START_DELAY : Constants.BOT_START_DELAY);\r\n    }\r\n\r\n    private botStep() {\r\n        if(!this._canStep)\r\n            return;\r\n\r\n        let dir = Constants.target.node.getWorldPosition().subtract(Constants.opponentTorus!.node.position);\r\n\r\n        let nextBotStepDelay = 0;\r\n\r\n        if (this._botSkill >= Constants.RandomNotFixedSeed.range(-0.1, 1.5) || this._botSkill >= 0.9){\r\n            if (dir.y >= -0.5&& dir.x >= 0){\r\n                Constants.opponentTorus?.Launch(Constants.MOVE_DIR.Right);\r\n            } else if (dir.y >= -0.5 && dir.x <= 0){\r\n                Constants.opponentTorus?.Launch(Constants.MOVE_DIR.Left);\r\n            }\r\n\r\n            if (dir.y > 1){\r\n                nextBotStepDelay = Constants.RandomNotFixedSeed.range(Constants.BOT_STEP_DELAY_MIN_1, Constants.BOT_STEP_DELAY_MIN_2);\r\n            } else {\r\n                nextBotStepDelay = Constants.RandomNotFixedSeed.range(Constants.BOT_STEP_DELAY_MAX_1, Constants.BOT_STEP_DELAY_MAX_2);\r\n            }\r\n        } else {\r\n            if (Constants.RandomNotFixedSeed.range(0, 1) > 0.5) {\r\n                Constants.opponentTorus?.Launch(Constants.MOVE_DIR.Right);\r\n            } else{\r\n                Constants.opponentTorus?.Launch(Constants.MOVE_DIR.Left);\r\n            }\r\n            nextBotStepDelay = Constants.RandomNotFixedSeed.range(0.3, 1)\r\n        }\r\n\r\n\r\n        this.scheduleOnce(() => {\r\n            this.botStep();\r\n        }, nextBotStepDelay);\r\n    }\r\n\r\n    public botStop() {\r\n        this._canStep = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.botStop();\r\n    } \r\n\r\n    onDisable() {\r\n        this.botStop();\r\n    }\r\n}\r\n","\r\nimport { _decorator, Component, Vec3, Animation } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('CameraController')\r\nexport class CameraController extends Component {\r\n\r\n    @property({ type: Animation })\r\n    Animation: Animation = null!;\r\n\r\n    private _prevMainTorusPos: Vec3;\r\n\r\n    update (deltaTime: number) {\r\n        this.setCameraPosition_Y();\r\n    }\r\n\r\n    public PlayShakeAnimation(){\r\n        this.Animation.play('shake')\r\n    }\r\n\r\n    private setCameraPosition_Y() {\r\n        if (this._prevMainTorusPos != null) {\r\n            let currentMainTorusPos = Constants.mainTorus.node.getPosition();\r\n            let deltaMainTorusPos_Y = currentMainTorusPos.y - this._prevMainTorusPos.y;\r\n\r\n            let newCameraPos = new Vec3(this.node.position.x, this.node.position.y + deltaMainTorusPos_Y / Constants.CAMERA_MOVE_COEFF, this.node.position.z);\r\n            this.node.setPosition(newCameraPos);\r\n        }\r\n        this._prevMainTorusPos = Constants.mainTorus.node.getPosition();\r\n    }\r\n}","\r\nimport { _decorator, Component, Vec3, Animation, Sprite, SpriteFrame, Quat } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('ComplimentPopup')\r\nexport class ComplimentPopup extends Component {\r\n    \r\n    @property({ type: Sprite })\r\n    mainSprite: Sprite = null!;\r\n\r\n    @property({ type: Animation })\r\n    animation: Animation = null!;\r\n\r\n    @property({ type: SpriteFrame })\r\n    mainSpriteFrames: (SpriteFrame | null)[] = [];\r\n\r\n    private _countShow = 0;\r\n\r\n    start() {\r\n        Constants.ComplimentPopup = this;\r\n        this.Disable();\r\n\r\n        // for test\r\n        // this.scheduleOnce(() => {\r\n        //     this.Show();\r\n        //  }, 2);\r\n    }\r\n\r\n    public Show () {\r\n        this._countShow++;\r\n        this.node.active = true;\r\n\r\n        this.setPositionAndRotation();\r\n\r\n        const frameIndex = this._countShow % this.mainSpriteFrames.length;\r\n        this.mainSprite.spriteFrame = this.mainSpriteFrames[frameIndex];\r\n        this.animation.play(Constants.COMPLIMENT_ENABLE_ANIMATION);\r\n    }\r\n\r\n    private setPositionAndRotation() {\r\n        let angl = new Quat();\r\n        if (Constants.RandomNotFixedSeed.Rand(2) == 0) {\r\n            this.node.setPosition(new Vec3(-5, 100, 0));\r\n            Quat.fromEuler(angl, 0, 0, 5);\r\n        } else {\r\n            this.node.setPosition(new Vec3(5, 100, 0));\r\n            Quat.fromEuler(angl, 0, 0, -5);\r\n        }\r\n        this.node.setRotation(angl);\r\n    }\r\n\r\n    public Disable() {\r\n        this.node.active = false;\r\n    }\r\n}","\r\nimport { Camera, Canvas, Vec3, _decorator } from 'cc';\r\nimport { CameraController } from './CameraController';\r\nimport { ComplimentPopup } from './ComplimentPopup';\r\nimport CustomRandom from './CustomRandom';\r\nimport { GameController } from './GameController';\r\nimport { TargetController } from './TargetController';\r\nimport { Torus } from './Torus';\r\n\r\nenum GAME_MODE {\r\n    SOLO,\r\n    WITH_BOT,\r\n    PVP\r\n}\r\n\r\nenum TORUS_TYPE {\r\n    MAIN,\r\n    OPPONENT\r\n}\r\n\r\nenum MOVE_DIR {\r\n    Left,\r\n    Right,\r\n}\r\n\r\nenum HAPTIC_TYPE {\r\n    LIGHT = 'lightImpact',\r\n    MEDIUM = 'mediumImpact',\r\n    HEAVY = 'heavyImpact',\r\n}\r\n\r\nenum GAME_EVENT {\r\n    START_TOUCH = 'start_touch',\r\n}\r\n\r\nexport class Constants {\r\n    static gameController: GameController;\r\n    static cameraController: CameraController;\r\n\r\n    static mainTorus?: Torus;\r\n    static opponentTorus?: Torus;\r\n    static fakeTorus?: Torus;\r\n    static target: TargetController;\r\n    static MainCanvas: Canvas;\r\n    static MainCamera: Camera;\r\n    static ComplimentPopup: ComplimentPopup;\r\n\r\n    static RandomFixedSeed = new CustomRandom(111);\r\n    static RandomNotFixedSeed = new CustomRandom();\r\n\r\n    static GAME_MODE = GAME_MODE;\r\n    static TORUS_TYPE = TORUS_TYPE;\r\n    static MOVE_DIR = MOVE_DIR;\r\n    static HAPTIC_TYPE = HAPTIC_TYPE;\r\n    static GAME_EVENT = GAME_EVENT;\r\n\r\n    static LEFT_BOARDER_NAME = \"left\";\r\n    static RIGHT_BOARDER_NAME = \"right\";\r\n\r\n    static UX_TORUS_HIT = \"\\\"play_hoops_random_hit\\\"\";\r\n    static UX_TORUS_LAUNCH = \"\\\"play_hoops_launch\\\"\";\r\n\r\n    static ADD_SCORE = 10;\r\n    \r\n    static TOUCH_DELAY = 0.15;\r\n\r\n    //torus\r\n    static MAIN_TORUS_SPAWN_POS = new Vec3(-2.5, 1.8, 0);\r\n    static OPPONENT_TORUS_SPAWN_POS = new Vec3(2.5, 1.8, 0);\r\n    static TORUS_SPAWN_CENTER_POS = new Vec3(0, 1.8, 0);\r\n    static TORUS_FORCE = 700;\r\n    static TORUS_PHYSICS_GROUP_MAIN = 2;\r\n    static TORUS_PHYSICS_GROUP_OPPONENT = 4;\r\n    static TORUS_LAUNCH_FORCE_COEFF_ON_BOARDER = 0.5;\r\n    static LEADER_POS_Y = 1.8;\r\n\r\n    //physics\r\n    static PHYSICS_FIXED_TIME_STEP = 1 / 60;\r\n    static PHYSICS_MAX_SUB_STEPS = 5;\r\n    static MAX_ACCUMULATOR = 1 / 5;\r\n\r\n    //sphere target\r\n    static SPHERE_SPAWN_POS_X = [-2.5, 0, 2.5];\r\n    static SPHERE_SPAWN_POS_Y = [5, 7, 9];\r\n    static SPHERE_ENABLE_ANIMATION = \"sphere_enable\";\r\n    static SPHERE_TRIGGER_DELAY = 0.2;\r\n\r\n    //Compliment\r\n    static COMPLIMENT_ENABLE_ANIMATION = \"compliment_enable\";\r\n    static COMPLIMENT_POPUP_DURATION = 1.5;\r\n    \r\n    //bot\r\n    static BOT_START_DELAY = 4;\r\n    static BOT_TRAINING_START_DELAY = 12;\r\n    static BOT_STEP_DELAY_MIN_1 = 0.2;\r\n    static BOT_STEP_DELAY_MIN_2 = 0.3;\r\n    static BOT_STEP_DELAY_MAX_1 = 0.3;\r\n    static BOT_STEP_DELAY_MAX_2 = 0.5;\r\n\r\n    //camera\r\n    static CAMERA_MOVE_COEFF = 6;\r\n}\r\n","\r\nimport { _decorator } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('CustomRandom')\r\nexport default class CustomRandom{\r\n    /**\r\n         * Create a random number generator\r\n     */\r\n    public constructor(seed?: number) {\r\n        this.seed = seed!;\r\n        if (!this.seed && this.seed != 0) {\r\n            this.seed = new Date().getTime();\r\n        }\r\n    }\r\n    /**\r\n         * Set the seed for the random number generator. If it is not set, it will actually take the current time in milliseconds.\r\n     */\r\n    public seed: number;\r\n    /**\r\n         * Returns a random number between 0.0 and 1.0\r\n     */\r\n    public get value(): number {\r\n        return this.range(0, 1);\r\n    }\r\n    /**\r\n         * Returns a random floating point number between min and max\r\n     */\r\n    public range(min: number, max: number): number {\r\n        if (!this.seed && this.seed != 0) {\r\n            this.seed = new Date().getTime();\r\n        }\r\n        max = max || 1;\r\n        min = min || 0;\r\n        this.seed = (this.seed * 9301 + 49297) % 233280;\r\n        var rnd = this.seed / 233280.0;\r\n        return min + rnd * (max - min);\r\n    }\r\n\r\n    /**\r\n         * Returns an integer between [0, max)\r\n    */\r\n    public Rand(max:number):number\r\n    {\r\n        return Math.floor(this.range(0,max));\r\n    }\r\n\r\n    public RandInArray(array: Array<number>, exclud1?: number, exclud2?: number):number\r\n    {\r\n        array = array.filter(obj => obj !== exclud1!)\r\n        array = array.filter(obj => obj !== exclud2!)\r\n        return array[this.Rand(array.length)];\r\n    }\r\n}","\r\nimport { _decorator, Component, PhysicsSystem, Prefab, Canvas, Camera, math, Node } from 'cc';\r\nimport { BotController } from './BotController';\r\nimport { Constants } from './Constants';\r\nimport { TouchController } from './TouchController';\r\nimport { TorusSpawner } from './TorusSpawner';\r\nimport { BackgroundController } from './BackgroundController';\r\nimport { TrainingController } from './TrainingController';\r\nimport { CameraController } from './CameraController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n\r\n    @property({ type: BotController })\r\n    botController: BotController = null!;\r\n\r\n    @property({ type: TouchController })\r\n    touchController: TouchController = null!;\r\n\r\n    @property({ type: CameraController })\r\n    cameraController: CameraController = null!;\r\n\r\n    @property({ type: TrainingController })\r\n    trainingController: TrainingController = null!;\r\n\r\n    @property({ type: TorusSpawner })\r\n    torusSpawner: TorusSpawner = null!;\r\n\r\n    @property({ type: BackgroundController })\r\n    backgroundController: BackgroundController = null!;\r\n\r\n    @property({ type: Camera })\r\n    MainCamera: Camera = null!;\r\n\r\n    @property({ type: Canvas })\r\n    MainCanvas: Canvas = null!;\r\n\r\n    @property({ type: Prefab })\r\n    ScoreAnimPrefab: Prefab = null!;\r\n\r\n    public GameMode = Constants.GAME_MODE.WITH_BOT;\r\n    public MainScore = 0;\r\n    public BotScore = 0;\r\n    public IsMaster = false;\r\n    public IsTraining = false;\r\n    public BotSkill = 0;\r\n\r\n    __preload() {\r\n        Constants.gameController = this;\r\n        this.touchController.enabled = false;\r\n        Constants.MainCamera = this.MainCamera;\r\n        Constants.MainCanvas = this.MainCanvas;\r\n        Constants.cameraController = this.cameraController;\r\n    }\r\n\r\n    onLoad() {\r\n        PhysicsSystem.instance.fixedTimeStep = Constants.PHYSICS_FIXED_TIME_STEP;\r\n        PhysicsSystem.instance.maxSubSteps = Constants.PHYSICS_MAX_SUB_STEPS;\r\n\r\n        window.GameController = this;\r\n    }\r\n\r\n    start () {\r\n        if (window.blitzOnSceneLoaded !== undefined)\r\n            window.blitzOnSceneLoaded();\r\n        else \r\n            // this.startGame(\"StrongBot\", 0, true, false, 1) //green - 517\r\n            this.startGame(\"Bot\", math.randomRange(0, 100), true, false, 0)\r\n            // this.startGame(\"SinglePlayer\", 0, true)\r\n    }\r\n\r\n    public startGame(gameMode: string, seed: number, isMaster: boolean, isFirstLaunch: boolean, botSkill: number) {\r\n        Constants.RandomFixedSeed.seed = seed;\r\n        this.setGameMode(gameMode);\r\n        this.MainScore = 0;\r\n        this.BotScore = 0;\r\n        this.IsMaster = isMaster;\r\n        this.IsTraining = isFirstLaunch;\r\n        this.BotSkill = botSkill;\r\n\r\n        if (!this.IsTraining){\r\n            this.trainingController.node.destroy()\r\n        } else {\r\n            Constants.RandomFixedSeed.seed = 100;\r\n        }\r\n\r\n        this.torusSpawner.Spawn()\r\n        this.backgroundController.SpawnBG()\r\n\r\n        if (this.GameMode == Constants.GAME_MODE.WITH_BOT)\r\n            this.botController.botStart();\r\n        else\r\n            this.botController.botStop();\r\n\r\n        this.touchController.enabled = true;\r\n    }\r\n\r\n    public stopTraining() {\r\n        if (this.IsTraining && this.trainingController !== null) {\r\n            this.trainingController.node.destroy();\r\n            this.trainingController = null;\r\n        }\r\n    }\r\n\r\n    public gameStop() {\r\n        this.touchController.enabled = false;\r\n        if (this.GameMode == Constants.GAME_MODE.WITH_BOT) {\r\n            this.botController.botStop();\r\n            this.botGameOver();\r\n        }\r\n    }\r\n\r\n    public botGameOver(){\r\n        if (window.blitzOnBotGameOverOneWorld !== undefined)\r\n                window.blitzOnBotGameOverOneWorld();\r\n    }\r\n\r\n    public gameOver(){\r\n        if (window.blitzOnGameOver !== undefined)\r\n                window.blitzOnGameOver();\r\n    }\r\n\r\n    private setGameMode(gameMode: string) {\r\n        switch (gameMode) {\r\n            case \"Human\":\r\n                this.GameMode = Constants.GAME_MODE.PVP;\r\n                break;\r\n            case \"Bot\":\r\n                this.GameMode = Constants.GAME_MODE.WITH_BOT;\r\n                break;\r\n            case \"SinglePlayer\":\r\n                this.GameMode = Constants.GAME_MODE.SOLO;\r\n                break;\r\n            default:\r\n                console.log(\"GameMode not found\");\r\n        }\r\n    }\r\n\r\n    public PlayUX(name: string){\r\n        if (window.blitzOnUX !== undefined)\r\n            window.blitzOnUX(name);\r\n    }\r\n\r\n    public addScore(score: number) {\r\n        this.MainScore += score;\r\n        this.checkLeader(score);\r\n        if (window.blitzOnScore !== undefined)\r\n            window.blitzOnScore(this.MainScore);\r\n    }\r\n\r\n    public addBotScore(score: number) {\r\n        this.BotScore += score;\r\n        this.checkLeader(score);\r\n        if (window.blitzOnNewBotScoreOneWorld !== undefined)\r\n            window.blitzOnNewBotScoreOneWorld(this.BotScore);\r\n    }\r\n\r\n    public checkLeader(score: number){\r\n        if (score <= 0) {\r\n            return\r\n        }\r\n        if(this.GameMode !== Constants.GAME_MODE.SOLO){\r\n            let isBotLeader = this.BotScore > this.MainScore;\r\n            this.scheduleOnce(() => {\r\n                Constants.opponentTorus.SetLeader(isBotLeader);\r\n                Constants.mainTorus.SetLeader(!isBotLeader);\r\n            }, 0.4)\r\n        }\r\n    }\r\n\r\n    public launchOpponentTorus(dir: number){\r\n        Constants.opponentTorus?.Launch(dir);\r\n    }\r\n}","\r\nimport { _decorator, Prefab, Node, instantiate, NodePool } from \"cc\";\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass(\"PoolManager\")\r\nexport class PoolManager {\r\n    dictPool: { [name: string]: NodePool } = {}\r\n    dictPrefab: { [name: string]: Prefab } = {}\r\n\r\n    static _instance: PoolManager;\r\n\r\n    static get instance () {\r\n        if (this._instance) {\r\n            return this._instance;\r\n        }\r\n\r\n        this._instance = new PoolManager();\r\n        return this._instance;\r\n    }\r\n\r\n    getNode (prefab: Prefab, parent: Node) {\r\n        let name = prefab.data.name as string;\r\n        this.dictPrefab[name] = prefab;\r\n        let node: Node = null!;\r\n        if (this.dictPool.hasOwnProperty(name)) {\r\n            let pool = this.dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get()!;\r\n            } else {\r\n                node = instantiate(prefab);\r\n            }\r\n        } else {\r\n            let pool = new NodePool();\r\n            this.dictPool[name] = pool;\r\n\r\n            node = instantiate(prefab);\r\n        }\r\n\r\n        node.parent = parent;\r\n        return node;\r\n    }\r\n\r\n    putNode (node: Node) {\r\n        let name = node.name;\r\n        let pool = null;\r\n        if (this.dictPool.hasOwnProperty(name)) {\r\n            pool = this.dictPool[name];\r\n        } else {\r\n            pool = new NodePool();\r\n            this.dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    clearPool (name: string) {\r\n        if (this.dictPool.hasOwnProperty(name)) {\r\n            let pool = this.dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n}\r\n","import { _decorator, Component, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('RotateComponent')\r\nexport class RotateComponent extends Component {\r\n    @property(Number)\r\n    Speed = 0;\r\n\r\n    @property(Vec3)\r\n    Direction = new Vec3();\r\n\r\n\r\n    update (deltaTime: number) {\r\n        let addSpeed = this.Speed * deltaTime\r\n        const eulerAngles = this.node.eulerAngles;\r\n        this.node.eulerAngles = new Vec3(\r\n            eulerAngles.x + this.Direction.x * addSpeed,\r\n            eulerAngles.y + this.Direction.y * addSpeed,\r\n            eulerAngles.z + this.Direction.z * addSpeed);\r\n    }\r\n}","\r\nimport { _decorator, Component, Animation, Vec3 } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { PoolManager } from './PoolManager';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('ScoreController')\r\nexport class ScoreController extends Component {\r\n    public ShowScore(score: number, worldPos: Vec3) {\r\n        const node = PoolManager.instance.getNode(Constants.gameController.ScoreAnimPrefab, Constants.MainCanvas.node);\r\n        const pos = new Vec3();\r\n        const cameraComp = Constants.MainCamera;\r\n        cameraComp.convertToUINode(worldPos, Constants.MainCanvas.node, pos);\r\n\r\n        node.setPosition(pos);\r\n        const animationComponent = node.getComponent(Animation)!;\r\n        animationComponent.once(Animation.EventType.FINISHED, () => {\r\n            node.destroy();\r\n        });\r\n        animationComponent.play();\r\n    }\r\n}\r\n","\r\nimport { _decorator, Component, director } from 'cc';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('Startup')\r\nexport class Startup extends Component {\r\n    start () {\r\n        director.preloadScene(\"game\", function () {\r\n            window.blitzOnSceneLoaded();\r\n        });\r\n    }\r\n}","import { _decorator, Component, Color, Material, Prefab, Vec3, Quat, ParticleSystem } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { PoolManager } from './PoolManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Target')\r\nexport class Target extends Component {\r\n\r\n    @property({ type: Color })\r\n    mainColors: (Color | null)[] = [];\r\n    \r\n    @property({ type: Color })\r\n    additionalColors: (Color | null)[] = [];\r\n    \r\n    @property(Material)\r\n    material: Material = null!;\r\n    \r\n    @property({ type: Prefab })\r\n    ParticlePrefab: Prefab = null!;\r\n\r\n    private _currentColorIndex = null;\r\n\r\n    onLoad() {\r\n        this.setColor();\r\n    }\r\n\r\n    private setColor() {\r\n        this._currentColorIndex = Constants.RandomFixedSeed.Rand(this.mainColors.length);\r\n        this.setColorMaterial(this.material, this.mainColors[this._currentColorIndex]);\r\n    }\r\n\r\n    public SetActive(active: boolean){\r\n        this.node.active = active;\r\n        this.setColor();\r\n    }\r\n\r\n    public GetMainColor(){\r\n        return this.mainColors[this._currentColorIndex];\r\n    }\r\n\r\n    public GetAdditionalColor(){\r\n        return this.additionalColors[this._currentColorIndex];\r\n    }\r\n    \r\n    public PlayParticles(pos: Vec3, rot_z: number) {\r\n        const particleNode = PoolManager.instance.getNode(this.ParticlePrefab, this.node.parent.parent);\r\n        particleNode.setWorldPosition(pos);\r\n\r\n        const particleSystemComp = particleNode.getComponentsInChildren(ParticleSystem)!;\r\n\r\n        const mainColor = this.GetMainColor();\r\n        const additionalColor = this.GetAdditionalColor();\r\n        particleSystemComp.forEach(element => {\r\n            element.startColor.colorMax = mainColor;\r\n            element.startColor.colorMin = additionalColor;\r\n            element.play()\r\n        });\r\n        let leftRotation = new Quat();\r\n        let rightRotation = new Quat();\r\n        Quat.fromAngleZ(leftRotation, rot_z);\r\n        Quat.fromAngleZ(rightRotation, rot_z + 180);\r\n        particleSystemComp[0].node.setWorldRotation(leftRotation);\r\n        particleSystemComp[1].node.setWorldRotation(rightRotation);\r\n    }\r\n\r\n    private setColorMaterial(material: Material, color: Color){\r\n        material?.setProperty(\"mainColor\", color);\r\n        material?.setProperty(\"emissive\", color);\r\n    }\r\n}\r\n\r\n","\r\nimport { _decorator, Component, ITriggerEvent, Collider, Vec3, Animation } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { ScoreController } from './ScoreController';\r\nimport { Target } from './Target';\r\nimport { Torus } from './Torus';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('TargetController')\r\nexport class TargetController extends Component {\r\n\r\n    @property({ type: Target })\r\n    targets: (Target)[] = [];\r\n\r\n    @property({ type: Collider })\r\n    TriggerCollider: Collider = null!;\r\n\r\n    @property({ type: Animation })\r\n    Animation: Animation = null!;\r\n\r\n    private _scoreController = new ScoreController();\r\n    private _currentTargetIndex = 0;\r\n\r\n    onLoad() {\r\n        Constants.target = this;\r\n    }\r\n\r\n    start() {\r\n        this.targets.forEach(element => {\r\n            element.enabled = false\r\n        });\r\n        this.enableRandomTarget()\r\n        this.TriggerCollider.on('onTriggerEnter', this.onTriggerEnter, this);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.TriggerCollider.off('onTriggerEnter', this.onTriggerEnter, this);\r\n    }\r\n\r\n    private onTriggerEnter(event: ITriggerEvent) {\r\n        let torus = event.otherCollider.getComponent(Torus);\r\n        this.onTrigger(torus, false);\r\n    }\r\n\r\n    private onTrigger(torus: Torus, test: boolean) {\r\n        this.TriggerCollider.enabled = false;\r\n\r\n        let torus_rot_z = torus.node.eulerAngles.z;\r\n        this.targets[this._currentTargetIndex].PlayParticles(this.node.getWorldPosition(), torus_rot_z);\r\n        this.scheduleOnce(() => {\r\n            if (torus !== null && torus.Type === Constants.TORUS_TYPE.MAIN) {\r\n                Constants.gameController.addScore(Constants.ADD_SCORE);\r\n                Constants.gameController.PlayUX(Constants.UX_TORUS_HIT);\r\n                Constants.gameController.stopTraining();\r\n                this._scoreController.ShowScore(Constants.ADD_SCORE, new Vec3(this.node.worldPosition.x, this.node.worldPosition.y, 0));\r\n                Constants.ComplimentPopup.Show();\r\n\r\n                Constants.cameraController.PlayShakeAnimation();\r\n            } else if (torus.Type === Constants.TORUS_TYPE.OPPONENT) {\r\n                Constants.gameController.addBotScore(Constants.ADD_SCORE);\r\n            }\r\n            this.setNextPos(() => {\r\n                this.enableRandomTarget();\r\n            });\r\n        }, Constants.SPHERE_TRIGGER_DELAY);\r\n    }\r\n\r\n    private setNextPos(callback: Function){\r\n        const newPos_x = Constants.RandomFixedSeed.RandInArray(Constants.SPHERE_SPAWN_POS_X, this.node.position.x);\r\n        const newPos_y = Constants.RandomFixedSeed.RandInArray(Constants.SPHERE_SPAWN_POS_Y, this.node.position.y);\r\n        const newPos = new Vec3(newPos_x, newPos_y, 0);\r\n\r\n        this.node.setWorldPosition(newPos);\r\n        callback()\r\n    }\r\n\r\n    private enableRandomTarget() {\r\n        this.targets[this._currentTargetIndex].SetActive(false);\r\n        let index = Constants.RandomFixedSeed.Rand(this.targets.length);\r\n        this.targets[index].SetActive(true);\r\n        this._currentTargetIndex = index;\r\n\r\n        this.Animation.play(Constants.SPHERE_ENABLE_ANIMATION);\r\n        this.scheduleOnce(() => {\r\n            this.TriggerCollider.enabled = true;\r\n        }, 0.1)\r\n    }\r\n}","\r\nimport { _decorator, Component, Node, RigidBody, Vec3, Collider, ICollisionEvent, Prefab, ParticleSystem, AnimationComponent, MeshRenderer } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { PoolManager } from './PoolManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n \r\n@ccclass('Torus')\r\nexport class Torus extends Component {\r\n    \r\n    @property({ type: Prefab })\r\n    leaderPrefab: Prefab = null!;\r\n\r\n    @property({ type: Node })\r\n    startArrow: Node = null!;\r\n\r\n    @property({ type: Node })\r\n    torusMeshNode: Node = null!;\r\n\r\n    @property({ type: AnimationComponent })\r\n    torusLaunchEffect: AnimationComponent = null!;\r\n\r\n    @property({ type: ParticleSystem })\r\n    launchParticle: ParticleSystem = null!;\r\n\r\n    public Type = Constants.TORUS_TYPE.MAIN;\r\n    \r\n    private _rigidBody: RigidBody;\r\n    private _collider: (Collider | null)[] = [];\r\n    private _isFirstLaunch = false;\r\n    private _leaderNode: Node;\r\n    private _isLeader: boolean;\r\n\r\n    onLoad() {\r\n        this._rigidBody = this.getComponentInChildren(RigidBody) ?? this.getComponent(RigidBody);\r\n        this._collider = this.getComponentsInChildren(Collider) ?? this.getComponents(Collider);\r\n        this._rigidBody.useGravity = false;\r\n    }\r\n\r\n    start() {\r\n        //this._rigidBody.useGravity = true;\r\n        if(Constants.gameController.GameMode !== Constants.GAME_MODE.SOLO){\r\n            this.setPhysicsGroup();\r\n            this.initLeaderNode();\r\n            if(this.Type === Constants.TORUS_TYPE.OPPONENT){\r\n                this.startArrow.active = false;\r\n            }\r\n        }\r\n        if(Constants.gameController.IsTraining){\r\n            if (this.Type === Constants.TORUS_TYPE.OPPONENT)\r\n                this.SetMeshEnabled(false)\r\n            this.startArrow.active = false;\r\n        }\r\n        \r\n        for(let i = 0; i < this._collider.length; i++){\r\n            this._collider[i].on('onCollisionEnter', this.onCollisionEnter, this);\r\n        }\r\n        Constants.gameController.node.on(Constants.GAME_EVENT.START_TOUCH, this.onStartTouch, this);\r\n    }\r\n\r\n    onDestroy() {        \r\n        for(let i = 0; i < this._collider.length; i++){\r\n            this._collider[i].off('onCollisionEnter', this.onCollisionEnter, this);\r\n        }\r\n        Constants.gameController.node.off(Constants.GAME_EVENT.START_TOUCH, this.onStartTouch, this);\r\n    }\r\n\r\n    update(dt: number){\r\n        this.setLeaderNodePosition();\r\n    }\r\n\r\n    public Launch(direction: number, forceCoeff = 1) {\r\n        if(!this._isFirstLaunch){\r\n            this._rigidBody.useGravity = true;\r\n            this._isFirstLaunch = true;\r\n        }\r\n        \r\n        if(this.Type === Constants.TORUS_TYPE.MAIN){\r\n            this.torusLaunchEffect.play();\r\n            Constants.gameController.PlayUX(Constants.UX_TORUS_LAUNCH)\r\n            this.launchParticle.play();\r\n            if (window.blitzOnLaunchOpponentTorus !== undefined && forceCoeff == 1 \r\n                && Constants.gameController.GameMode == Constants.GAME_MODE.PVP) {\r\n                    window.blitzOnLaunchOpponentTorus(direction);\r\n            }\r\n        } else {\r\n            if(Constants.gameController.IsTraining)\r\n                Constants.opponentTorus.SetMeshEnabled(true);\r\n        }\r\n\r\n        this._rigidBody.setLinearVelocity(new Vec3(0, 0, 0));\r\n\r\n        let dirVec = direction === Constants.MOVE_DIR.Left ? new Vec3(-0.3, 1, 0) : new Vec3(0.3, 1, 0);\r\n        let force = dirVec.multiplyScalar(Constants.TORUS_FORCE * forceCoeff);\r\n        this._rigidBody.applyForce(force);\r\n    }\r\n\r\n    public SetLeader(leader: boolean) {\r\n        this._isLeader = leader\r\n    }\r\n\r\n    public SetMeshEnabled(enabled: boolean) {\r\n        let mesh = this.node.getComponentInChildren(MeshRenderer) ?? this.node.getComponent(MeshRenderer);\r\n        mesh.enabled = enabled;\r\n\r\n        let leaderMesh = this._leaderNode.getComponentInChildren(MeshRenderer) ?? this._leaderNode.getComponent(MeshRenderer);\r\n        leaderMesh.enabled = enabled;\r\n    }\r\n\r\n\r\n    private initLeaderNode(){\r\n        this._leaderNode = PoolManager.instance.getNode(this.leaderPrefab, this.node.parent);\r\n        this._leaderNode.active = false;\r\n        this._isLeader = false;\r\n    }\r\n\r\n    private setLeaderNodePosition(){\r\n        if(this._leaderNode && this._isLeader){\r\n            let pos = new Vec3(this.node.worldPosition.x, this.node.worldPosition.y + Constants.LEADER_POS_Y, this.node.worldPosition.z);\r\n            this._leaderNode.setPosition(pos);\r\n            this._leaderNode.active = true;\r\n        } else if (this._leaderNode.active) {\r\n            this._leaderNode.active = false;\r\n        }\r\n    }\r\n\r\n    private onCollisionEnter(event: ICollisionEvent) {\r\n        if (event.otherCollider.node.name == Constants.LEFT_BOARDER_NAME){\r\n            this.Launch(Constants.MOVE_DIR.Right, Constants.TORUS_LAUNCH_FORCE_COEFF_ON_BOARDER);\r\n        }\r\n        else if (event.otherCollider.node.name == Constants.RIGHT_BOARDER_NAME){\r\n            this.Launch(Constants.MOVE_DIR.Left, Constants.TORUS_LAUNCH_FORCE_COEFF_ON_BOARDER);\r\n        }\r\n    }\r\n\r\n    private onStartTouch(){\r\n        if(this.Type === Constants.TORUS_TYPE.MAIN){\r\n            this.startArrow.active = false;\r\n        }\r\n    }\r\n\r\n    private setPhysicsGroup(){\r\n        if(this.Type === Constants.TORUS_TYPE.MAIN)\r\n            this._rigidBody.setGroup(Constants.TORUS_PHYSICS_GROUP_MAIN);\r\n        else\r\n            this._rigidBody.setGroup(Constants.TORUS_PHYSICS_GROUP_OPPONENT);\r\n    }\r\n}","\r\nimport { _decorator, Component, Node, instantiate, MeshRenderer, Texture2D, Prefab, Material, Vec3 } from 'cc';\r\nimport { Constants } from './Constants';\r\nimport { Torus } from './Torus';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('TorusSpawner')\r\nexport class TorusSpawner extends Component {\r\n\r\n    @property({ type: Prefab })\r\n    torusPref: Prefab = null!;\r\n\r\n    @property({ type: Material })\r\n    opponentMaterial: Material = null!;\r\n\r\n    @property({ type: Material })\r\n    mainMaterial: Material = null!;\r\n    \r\n    @property({ type: Texture2D })\r\n    torusTextures: (Texture2D | null)[] = [];\r\n\r\n    public Spawn () {\r\n        let mainPos : Vec3\r\n        let oppPos : Vec3\r\n        if (Constants.gameController.IsMaster) {\r\n            mainPos = Constants.MAIN_TORUS_SPAWN_POS\r\n            oppPos = Constants.OPPONENT_TORUS_SPAWN_POS\r\n        } else {\r\n            mainPos = Constants.OPPONENT_TORUS_SPAWN_POS\r\n            oppPos = Constants.MAIN_TORUS_SPAWN_POS\r\n        }\r\n\r\n        if (Constants.gameController.GameMode === Constants.GAME_MODE.SOLO ||\r\n            Constants.gameController.IsTraining ) {\r\n                mainPos =  Constants.TORUS_SPAWN_CENTER_POS\r\n        }\r\n\r\n        //this.createMainTorus(new Vec3(0, 8, 0));\r\n        this.createMainTorus(mainPos);\r\n        if (Constants.gameController.GameMode !== Constants.GAME_MODE.SOLO) {\r\n            this.createOpponentTorus(oppPos);\r\n        }\r\n    }\r\n\r\n    public createFakeTorus(position: Vec3) {\r\n        const mainTorus = instantiate(this.torusPref);\r\n        mainTorus.parent = this.node.parent;\r\n        mainTorus.position = position;\r\n        this.setMaterial(mainTorus, this.mainMaterial);\r\n        this.setRandomTexture(mainTorus, this.torusTextures);\r\n\r\n        Constants.fakeTorus = mainTorus.getComponent(Torus)!;\r\n        Constants.fakeTorus.Type = Constants.TORUS_TYPE.MAIN;\r\n    }\r\n\r\n    private createOpponentTorus(position: Vec3) {\r\n        const opponentTorus = instantiate(this.torusPref);\r\n        opponentTorus.parent = this.node.parent;\r\n        opponentTorus.position = position;\r\n        this.setMaterial(opponentTorus, this.opponentMaterial);\r\n        this.setRandomTexture(opponentTorus, this.torusTextures);\r\n        \r\n        Constants.opponentTorus = opponentTorus.getComponent(Torus)!;\r\n        Constants.opponentTorus.Type = Constants.TORUS_TYPE.OPPONENT;\r\n    }\r\n\r\n    private createMainTorus(position: Vec3) {\r\n        const mainTorus = instantiate(this.torusPref);\r\n        mainTorus.parent = this.node.parent;\r\n        mainTorus.position = position;\r\n        this.setMaterial(mainTorus, this.mainMaterial);\r\n        this.setRandomTexture(mainTorus, this.torusTextures);\r\n\r\n        Constants.mainTorus = mainTorus.getComponent(Torus)!;\r\n        Constants.mainTorus.Type = Constants.TORUS_TYPE.MAIN;\r\n    }\r\n\r\n    private setRandomTexture(node: Node, textures: (Texture2D | null)[]) {\r\n        let mesh = node.getComponentInChildren(MeshRenderer) ?? node.getComponent(MeshRenderer);\r\n        mesh?.getMaterial(0)?.setProperty(\"mainTexture\", textures[Constants.RandomFixedSeed.Rand(textures.length)]);\r\n        // mesh?.getMaterial(0)?.setProperty(\"mainTexture\", textures[7]);\r\n    }\r\n\r\n    private setMaterial(node: Node, material: Material) {\r\n        let mesh = node.getComponentInChildren(MeshRenderer) ?? node.getComponent(MeshRenderer);\r\n        mesh?.setMaterial(material, 0);\r\n    }\r\n}","\r\nimport { _decorator, Component, Node, EventTouch, Touch, view } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass } = _decorator;\r\n\r\n@ccclass('TouchController')\r\nexport class TouchController extends Component {\r\n\r\n    private _screenWidth: number;\r\n    private _canTouch = true;\r\n    private _touchTimer = 0;\r\n\r\n    start() {\r\n        this._screenWidth = view.getVisibleSizeInPixel().width;\r\n    }\r\n\r\n    onEnable() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    onDisable() {\r\n        this.node.off(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    onTouchStart(touch: Touch, event: EventTouch) {\r\n        if (!this._canTouch) return;\r\n\r\n        Constants.gameController.node.emit(Constants.GAME_EVENT.START_TOUCH);\r\n\r\n        let touchPos = touch.getLocation();\r\n\r\n        if (touchPos.x > this._screenWidth / 2) {\r\n            Constants.mainTorus?.Launch(Constants.MOVE_DIR.Right);\r\n        } else {\r\n            Constants.mainTorus?.Launch(Constants.MOVE_DIR.Left);\r\n        }\r\n        this._canTouch = false\r\n        this._touchTimer = 0\r\n    }\r\n\r\n    update(dt: number){\r\n        this._touchTimer += dt\r\n        if (!this._canTouch && this._touchTimer >= Constants.TOUCH_DELAY) {\r\n            this._canTouch = true\r\n            this._touchTimer = 0\r\n        }\r\n    }\r\n}","\r\nimport { _decorator, Component, Node, Animation, Prefab, instantiate, Vec3, Quat, MeshRenderer, Vec4 } from 'cc';\r\nimport { Constants } from './Constants';\r\nconst { ccclass, property } = _decorator;\r\n\r\n \r\n@ccclass('TrainingController')\r\nexport class TrainingController extends Component {\r\n\r\n    @property({ type: Animation })\r\n    leftButtonAnim: Animation = null!;\r\n\r\n    @property({ type: Animation })\r\n    rightButtonAnim: Animation = null!;\r\n\r\n    @property({ type: Prefab })\r\n    arrowPref: Prefab = null!;\r\n\r\n    private currentActiveAnimDir : number;\r\n    private targetArrow?: Node;\r\n\r\n    start () {\r\n        this.targetArrow = instantiate(this.arrowPref);\r\n        this.targetArrow.parent = Constants.target.node;\r\n        this.targetArrow.scale = new Vec3(1, 1, 1);\r\n        this.targetArrow.active = true;\r\n        Constants.gameController.node.on(Constants.GAME_EVENT.START_TOUCH, this.onStartTouch, this);\r\n    }\r\n\r\n    private swapAnim (dir: number) {\r\n        this.currentActiveAnimDir = dir;\r\n        switch(dir) {\r\n            case Constants.MOVE_DIR.Left:\r\n                this.leftButtonAnim.play(\"training_button_left\");\r\n                this.rightButtonAnim.play(\"training_button_idle\");\r\n                break;\r\n            case Constants.MOVE_DIR.Right:\r\n                this.leftButtonAnim.play(\"training_button_idle\");\r\n                this.rightButtonAnim.play(\"training_button_right\");\r\n                break;\r\n            default:\r\n                console.log(\"Training dir not found\");\r\n                return\r\n        }\r\n    }\r\n\r\n    onDisable () {\r\n        // this.leftButtonAnim.node.destroy()\r\n        // this.rightButtonAnim.node.destroy()\r\n\r\n        this.leftButtonAnim.node.active = false;\r\n        this.rightButtonAnim.node.active = false;\r\n        this.targetArrow?.destroy()\r\n        Constants.gameController.node.off(Constants.GAME_EVENT.START_TOUCH, this.onStartTouch, this);\r\n    }\r\n\r\n    private onStartTouch(){\r\n    }\r\n\r\n    private updateButtonsState() {\r\n        let dir = 0\r\n        if (Constants.mainTorus.node.position.x > Constants.target.node.position.x) {\r\n            dir = Constants.MOVE_DIR.Left;\r\n        } else {\r\n            dir = Constants.MOVE_DIR.Right;\r\n        }\r\n        if (dir !== this.currentActiveAnimDir)\r\n            this.swapAnim(dir)\r\n    }\r\n\r\n    private setTargetArrowAlpha(alpha){\r\n        let mesh = this.targetArrow.getComponentInChildren(MeshRenderer) ?? this.targetArrow.getComponent(MeshRenderer);\r\n        mesh.getMaterial(0)?.setProperty('albedo', new Vec4(0, 0, 0, alpha));\r\n    }\r\n\r\n    private updateTargetArrow() { \r\n        if (this.targetArrow === null) return;\r\n\r\n        let tempQuat = new Quat()\r\n        if (Constants.mainTorus.node.worldPosition.y > Constants.target.node.position.y) {\r\n            this.targetArrow.lookAt(Constants.mainTorus.node.worldPosition, new Vec3(0, 0, 1));\r\n            Quat.toEuler(tempQuat, this.targetArrow.rotation);\r\n            this.targetArrow.setRotationFromEuler(new Vec3(0, 0, tempQuat.z));\r\n        } else {\r\n            this.targetArrow.lookAt(Constants.mainTorus.node.worldPosition, new Vec3(0, 0, -1));\r\n            Quat.toEuler(tempQuat, this.targetArrow.rotation);\r\n            this.targetArrow.setRotationFromEuler(new Vec3(0, 0, tempQuat.z + 180));\r\n        }\r\n\r\n        let distance = Vec3.distance(Constants.mainTorus.node.worldPosition, Constants.target.node.worldPosition);\r\n        if (distance >= 8){\r\n            this.setTargetArrowAlpha(1);\r\n        }\r\n        else if (distance <= 2){\r\n            this.setTargetArrowAlpha(0);\r\n        }\r\n        else{\r\n            this.setTargetArrowAlpha(distance / 8);\r\n        }\r\n    }\r\n\r\n    update (deltaTime: number) {\r\n        this.updateButtonsState()\r\n        this.updateTargetArrow()\r\n    }\r\n}"]}